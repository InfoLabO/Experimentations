
/*
  Game port -> USB Mouse, Arduino Leonardo sketch
  Game port pinout reference : 
  http://pinouts.ru/Inputs/GameportPC_pinout.shtml
  
  Les boutons relient directement le +5V a leur pin (2/7), il
  faut ajouter une resistance de 
  Les axes sont des resistances variables de 100k dont une
  extremite est au +5V et le point milieu est relie a la pin (3/6).
  L'autre extremite n'est pas connectee.

  Il faut donc dans tous les cas ajouter des resistances de
  pull-down (ici toutes de 100k) entre les pins et la Gnd pour
  fermer proprement les circuits.
  Pour les axes, la tension mesuree est 5V lorsque la resistance
  variable est a 0 et 2,5V lorsqu'elle est a 100k.
  On suppose ici le point milieu du joystick correctement calibre
  a 50k.

  Power mapping :
  Joy pin 1 -> +5V
  Joy pins 4 & 5 -> Gnd

*/

#define ANALOW 512
#define ANALIGH 1023
#define DELTANA (ANALOW+(ANALIGH-ANALOW)/2)
#define MOVETHRESH 30

// Joystick pin 2
#define BUTTON1 2
// Joystick pin 7
#define BUTTON2 3
// Joystick pin 3
#define AXEX1 A0
// Joystick pin 6
#define AXEY1 A1

void setup() {
  Serial.begin(9600);
  pinMode(BUTTON1,INPUT);
  pinMode(BUTTON2,INPUT);
  pinMode(AXEX1,INPUT);
  pinMode(AXEY1,INPUT);
  Mouse.begin();
}

void loop() {
  /*  Serial.println(digitalRead(BUTTON1));
      Serial.println(digitalRead(BUTTON2));
      Serial.println(analogRead(AXEX1));
      Serial.println(analogRead(AXEY1));
  */
  int dx = analogRead(AXEX1)-DELTANA;
  if (abs(dx)<MOVETHRESH) dx = 0;
  dx /= 20;
  int dy = analogRead(AXEY1)-DELTANA;
  if (abs(dy)<MOVETHRESH) dy = 0;
  dy /= 20;
  Mouse.move(-dx,-dy,0);
  if (digitalRead(BUTTON1)==HIGH) Mouse.click(MOUSE_LEFT);
  if (digitalRead(BUTTON2)==HIGH) Mouse.click(MOUSE_RIGHT);
  delay(100);
}
